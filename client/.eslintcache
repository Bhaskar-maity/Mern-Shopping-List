[{"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\components\\AppNavbar.js":"4","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\components\\ShoppingList.js":"5","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\store.js":"6","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reducers\\index.js":"7","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reducers\\itemReducer.js":"8","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\actions\\itemActions.js":"9","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\actions\\types.js":"10"},{"size":478,"mtime":1607104364452,"results":"11","hashOfConfig":"12"},{"size":470,"mtime":1607261127852,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1302,"mtime":1607106851393,"results":"15","hashOfConfig":"12"},{"size":2452,"mtime":1607264261410,"results":"16","hashOfConfig":"12"},{"size":410,"mtime":1607260903670,"results":"17","hashOfConfig":"12"},{"size":145,"mtime":1607261392351,"results":"18","hashOfConfig":"12"},{"size":520,"mtime":1607264149874,"results":"19","hashOfConfig":"12"},{"size":155,"mtime":1607263335264,"results":"20","hashOfConfig":"12"},{"size":117,"mtime":1607262272360,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mz2cem",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\index.js",[],["46","47"],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\App.js",["48"],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\components\\AppNavbar.js",["49","50"],"import React, { Component, Fragment, useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Container,\r\n  NavLink\r\n} from 'reactstrap';\r\n\r\nclass AppNavbar extends Component {\r\n    \r\n        state = {\r\n            isOpen: false\r\n        }\r\n    \r\n\r\n    toggle =() => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n       return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n                        <NavbarBrand href=\"/\">Shoplist</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#\">\r\n                                        my github\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n       )\r\n        \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AppNavbar;\r\n","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\components\\ShoppingList.js",["51","52"],"import React, {Component} from 'react';\r\nimport { Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport {v1 as uuid} from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\nclass ShoopingList extends Component {\r\n    \r\n\r\n    render() {\r\n        const { items } = this.state;\r\n\r\n        return(\r\n            <Container>\r\n                <Button\r\n                color=\"dark\"\r\n                style={{marginBottom: '2rem'}}\r\n                onClick={()=> {\r\n                    const name = prompt('Enter Item');\r\n                    if(name) {\r\n                        this.setState(state => ({\r\n                            items: [...state.items, { id: uuid(), name}]\r\n                        }));\r\n                    }\r\n                }}\r\n                >Add Item</Button>\r\n\r\n                <ListGroup>\r\n                    <TransitionGroup className =\"shopping-list\">\r\n                        {items.map(({id, name}) =>(\r\n                            <CSSTransition key={id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    <Button\r\n                                        className=\"remove-btn\"\r\n                                        color=\"danger\"\r\n                                        size=\"sm\"\r\n                                        onClick={() => {\r\n                                            this.setState  (state => ({\r\n                                                items: state.items.filter(item => item.id !== id)\r\n                                            }));\r\n                                        }}\r\n                                    > &times; </Button>\r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    item: state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, { getItems })(ShoopingList);","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\store.js",[],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\reducers\\itemReducer.js",["53","54","55"],"import uuid from 'uuid';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM} from '../actions/types';\r\n\r\nconst initialState = {\r\n    items: [\r\n        { id: uuid(), name: 'a'},\r\n        { id: uuid(), name: 'b'},\r\n        { id: uuid(), name: 'c'},\r\n        { id: uuid(), name: 'd'}\r\n    ]\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\actions\\itemActions.js",["56","57"],"C:\\Users\\user\\Desktop\\project\\reactApp\\Mern-Shoplist\\client\\src\\actions\\types.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":1,"column":28,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"67","line":1,"column":38,"nodeType":"64","messageId":"65","endLine":1,"endColumn":46},{"ruleId":"62","severity":1,"message":"68","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":17},{"ruleId":"62","severity":1,"message":"69","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":18},{"ruleId":"62","severity":1,"message":"70","line":2,"column":21,"nodeType":"64","messageId":"65","endLine":2,"endColumn":29},{"ruleId":"62","severity":1,"message":"71","line":2,"column":31,"nodeType":"64","messageId":"65","endLine":2,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":14,"column":1,"nodeType":"74","endLine":23,"endColumn":2},{"ruleId":"62","severity":1,"message":"70","line":1,"column":21,"nodeType":"64","messageId":"65","endLine":1,"endColumn":29},{"ruleId":"62","severity":1,"message":"71","line":1,"column":31,"nodeType":"64","messageId":"65","endLine":1,"endColumn":42},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'getItems' is defined but never used.","'ADD_ITEM' is defined but never used.","'DELETE_ITEM' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]